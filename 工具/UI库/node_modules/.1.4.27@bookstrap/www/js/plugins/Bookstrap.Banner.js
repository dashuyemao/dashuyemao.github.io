/*global bookstrap: false */
define([
  'underscore',
  'Bookstrap.DOMPage'
  ],
  function(_, DOMPage) {
    var BANNER_PAGE_TITLE = 'Banner',
        BANNER_CLASS = 'bookstrap-banner';

    var BannerPlugin = function() {
      this.showBanner = bookstrap.config.showBanner != undefined ? bookstrap.config.showBanner : false;
      this.bannerPageTitle = bookstrap.config.bannerPageTitle || BANNER_PAGE_TITLE;
      this.bannerResize = bookstrap.config.bannerResize != undefined ? bookstrap.config.bannerResize : true;
      this.$el = this.getBannerElement();
      this.bannerContent = '';
      bookstrap.on('navloaded', _.bind(this.onNavLoaded, this));
      if(this.bannerResize){
        bookstrap.on('resize', _.bind(this.resizeBanner, this));
      }
    };

    BannerPlugin.prototype.onNavLoaded = function(page) {
      this.extractBanner(this.bannerPageTitle);
    };

    BannerPlugin.prototype.getBannerElement = function() {
      var element = bookstrap.viewport.$el.parent().find('#' + BANNER_CLASS);
      if (!element.length) {
        element = $('<div>').attr('id', BANNER_CLASS);
      }
      return element;
    };

    BannerPlugin.prototype.extractBanner = function(title) {
      var bannerPage = null,
          pages = bookstrap.domPages.pages.pages,
          newPages = [];

      var self = this;

      for (var i=0; i < pages.length; i++) {
        if (pages[i].title === title) {
          if (this.showBanner) {
            bannerPage = pages[i];

            require(['text!../' + bannerPage.href], function(html) {
              var bannerContent = DOMPage.extractBodyContents(html);
              self.displayBanner(bannerContent);
            });
          }
        } else {
          newPages.push(pages[i]);
        }
      }
      bookstrap.domPages.pages.pages = newPages;
    };

    BannerPlugin.prototype.displayBanner = function(bannerContent) {
      if (this.$el){
        bookstrap.viewport.$el.before(this.$el);
        this.$el.html(bannerContent);
        if(this.bannerResize){
          this.resizeBanner();
        }
      }
    };
    BannerPlugin.prototype.resizeBanner = function() {
      if (!this.$el)
        return;
      var bannerHeight = this.$el.height();
      bookstrap.viewport.$el.css({
        top: bannerHeight
      });
      bookstrap.viewport.height = bookstrap.viewport.height - bannerHeight;
      bookstrap.resizeViewPort();
    };

    return BannerPlugin;
});