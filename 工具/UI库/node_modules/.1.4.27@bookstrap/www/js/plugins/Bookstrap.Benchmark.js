/*global bookstrap: false, bookstrapStartTime: false */
define(function() {

  var Benchmark = function() {
    this.timerMap = {};
    this.$logWindow = null;
    //this.initLoggingWindow();

    if (typeof(bookstrapStartTime) === 'undefined') {
      console.log('bookstrapStartTime not defined, cannot record app start time');
      // Add the following line to the HTML page
      // var bookstrapStartTime = (new Date()).getTime();
    } else {
      this.timerMap['appstartup'] = bookstrapStartTime;
      this.end('appstartup');
    }

    var self = this;
    bookstrap.on('beforepagecache', function(page) {
      self.start('pagecache');
    });
    bookstrap.on('pagecache', function(page) {
      self.end('pagecache');
    });
    bookstrap.on('beforepageload', function(page) {
      self.start('pageload');
    });
    bookstrap.on('pageload', function(page) {
      self.end('pageload');
    });
  };

  Benchmark.prototype = {
    start: function(name) {
      this.timerMap[name] = (new Date()).getTime();
      this.log('Benchmark start, ' + name);
    },
    end: function(name) {
      var endTime = (new Date()).getTime(),
          startTime = this.timerMap[name];
      if (typeof(startTime) === 'undefined') {
        console.warn('Did not start benchmark for ' + name);
        return;
      }
      var diff = endTime - startTime;
      this.log('Benchmark end, ' + name + ': ' + diff + 'ms');
      delete this.timerMap[name];
    },
    initLoggingWindow: function() {
      this.$logWindow = $('<div style="width: 400px; height: 200px; border: 1px solid red; z-index: 1; position: absolute; background-color: #FFF; overflow: scroll"></div>');
      $('body').prepend(this.$logWindow);
    },
    log: function(str) {
      console.log(str);
      //this.$logWindow.append('<p>' + str +'</p>');
    }
  };

  return Benchmark;
  }
);