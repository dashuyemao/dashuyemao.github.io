define('plugins/Bookstrap.TickableList', [
  'underscore'
],
function(_) {
  
  var TICKABLE_SELECTOR = '.book-tickable',
    TICKABLE_ENTRY_SELECTOR = '.book-tickable li',
    TICKABLE_LOCALSTORAGE_KEY = 'Bookstrap.TickableList.items',
    TOGGLE_CLASS = 'toggled';

  var TickableList = function(bookstrap){
    _.bindAll(this);
    this.items = JSON.parse(window.localStorage.getItem(TICKABLE_LOCALSTORAGE_KEY)) || {};

    this.bookstrap = bookstrap;
    bookstrap.on('pageload', this.onPageLoad);
    this.init();
  };

  var p = TickableList.prototype;

  p.init = function(){
    this.bindEvents();
  };

  p.onPageLoad = function(page){
    this.currentItems = page.$el.find(TICKABLE_ENTRY_SELECTOR);
    this.restore(page.page.href);
  };

  p.bindEvents = function(){
    _.bindAll(this);
    bookstrap.viewport.$el.on('click', TICKABLE_ENTRY_SELECTOR, this.onTick);
  };

  p.onTick = function(e){
    e.preventDefault();
    var el = $(e.currentTarget);
    var index = this.currentItems.index(el);
    
    if(el.hasClass(TOGGLE_CLASS)){
      this.items[bookstrap.domPages.current.page.href] = _.without(this.items[bookstrap.domPages.current.page.href], index);
    }else if(!this.items[bookstrap.domPages.current.page.href]){
      this.items[bookstrap.domPages.current.page.href] = [index];
    }else{
      this.items[bookstrap.domPages.current.page.href].push(index);
    }

    el.toggleClass(TOGGLE_CLASS);
    p.persist(this.items);
  };

  p.restore = function(href){
    var self = this;
    if(this.items[href] && this.items[href].length > 0 && this.currentItems.length > 0){
      _.each(this.items[href], function(index){
        self.currentItems.eq(index).addClass(TOGGLE_CLASS);
      });
    }
  };

  p.persist = function(items){
    window.localStorage.setItem(TICKABLE_LOCALSTORAGE_KEY, JSON.stringify(items));
  };

  return TickableList;
});