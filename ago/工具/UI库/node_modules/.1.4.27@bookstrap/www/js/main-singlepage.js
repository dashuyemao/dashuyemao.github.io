/*global bookstrap: true, require: false */

require.config({
  baseUrl: "js/",
  paths: {
    underscore: 'lib/underscore.amd',
    imagesloaded: 'lib/imagesloaded.pkgd.min'
  }
});

require([
  'Bookstrap.Core',
  'lib/events',
  'lib/jquery.hammer',
  'plugins/Bookstrap.Animations',
  'plugins/Bookstrap.ImagesLoaded',
  'plugins/Bookstrap.Layers',
  'plugins/Bookstrap.Popover',
  'plugins/Bookstrap.ContentScaler',
  'plugins/Bookstrap.Flipcard',
  'plugins/Bookstrap.ImageZoom'
  ],
  function(Bookstrap, EventEmitter, Hammer, Animations, ImagesLoaded, Layers, Popover, ContentScaler, Flipcard, ImageZoom) {


    $(function() {
      var config = typeof(bookstrapConfig) === 'undefined' ? {} : bookstrapConfig;
      console.log('Single page mode with config:', config);
      window.bookstrap = new Bookstrap(config);

      bookstrap.pages = {
        indexOf: function(page) {
          // Grab the index from the URL
          var url = window.location.href;
          var indexPlusExtension = url.substr(url.lastIndexOf('/page') + 5, url.length);
          var index = parseInt(indexPlusExtension.replace('.html', ''), 10);
          return index;
        }
      };
      bookstrap.navigate = function(href) {
        window.location = href;
      };

      $(window).on('resize', _.debounce(function(){
        bookstrap.emit('resize');
      }, 300));

      var page = new EventEmitter();
      page.$el = $('body');
      page.$scrollContainer = $(window.document);
      page.page = {
        href: window.location.pathname.split('/').pop()
      };

      var layers = new Layers(bookstrap),
          popover = new Popover(bookstrap),
          animation = new Animations(bookstrap),
          imagesLoaded = new ImagesLoaded(bookstrap);
          contentScaler = new ContentScaler(bookstrap),
          flipcard = new Flipcard(bookstrap),
          imagezoom = new ImageZoom(bookstrap);

      bookstrap.emit('ready');
      bookstrap.emit('pagecache', page);
      bookstrap.emit('pageload', page);
      bookstrap.emit('navigationcached', page, []);
    });
});